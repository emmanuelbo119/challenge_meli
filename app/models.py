from sqlalchemy import Column, String, Float, DateTime, TIMESTAMP, Numeric, ForeignKey
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import relationship
import uuid
import datetime
from .database import Base
# Importar Base desde models junto con Currency



class Currency(Base):
    __tablename__ = 'currency'
    __table_args__ = ({'schema': 'meli'})
    
    id = Column(UUID, primary_key=True, default=uuid.uuid4)  # Unique UUID generated by default
    code = Column(String, unique=True)  # Currency code
    name = Column(String, nullable=False)
    date_time = Column(TIMESTAMP, default=datetime.datetime.utcnow)  # Timestamp of creation 


class CurrencyConversion(Base):
    __tablename__ = "Currency_convertions"
    __table_args__ = ({'schema': 'meli'})
    
    id = Column(UUID(as_uuid=True), primary_key=True, default=uuid.uuid4, unique=True)
    base_currency_id = Column(UUID(as_uuid=True), ForeignKey("meli.currency.id"), name="base_currency")
    destination_currency_id = Column(UUID(as_uuid=True), ForeignKey("meli.currency.id"), name="destination_currency")
    date_time =Column(TIMESTAMP,  default=datetime.datetime.utcnow)
    name = Column(String)
    
    # Relaciones
    base_currency = relationship("Currency", foreign_keys=[base_currency_id])
    destination_currency = relationship("Currency", foreign_keys=[destination_currency_id])
    

class CurrencyQuote(Base):
    __tablename__ = 'Currency_quotes'
    __table_args__ = ({'schema': 'meli'})
    
    id = Column(UUID(as_uuid=True), primary_key=True, default=uuid.uuid4, unique=True)
    conversion_id = Column(UUID(as_uuid=True), ForeignKey("meli.Currency_convertions.id"))
    code = Column(String)
    codein = Column(String)
    name = Column(String)
    high = Column(Numeric(precision=20, scale=6))   
    low = Column(Numeric(precision=20, scale=6))
    var_bid = Column(Numeric(precision=20, scale=6))
    pct_change = Column(Numeric(precision=10, scale=6)) 
    bid = Column(Numeric(precision=20, scale=6))
    ask = Column(Numeric(precision=20, scale=6))
    timestamp = Column(String)
    create_date = Column(String)
    date_time = Column(TIMESTAMP(timezone=True), default=datetime.datetime.utcnow)
    
    # Relaci√≥n
    conversion = relationship("CurrencyConversion", foreign_keys=[conversion_id])